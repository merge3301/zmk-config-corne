/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letters {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB          &kp Q  &kp W  &kp E             &kp R           &kp T        &kp Y                 &kp U               &kp I                &kp O    &kp P     &kp LEFT_BRACKET
&kp C_AC_SEARCH  &kp A  &kp S  &kp D             &mt LEFT_GUI F  &kp G        &kp H                 &mt LEFT_COMMAND J  &kp K                &kp L    &kp SEMI  &kp SQT
&kp GRAVE        &kp Z  &kp X  &kp C             &kp V           &kp B        &kp N                 &kp M               &kp COMMA            &kp DOT  &kp FSLH  &kp RIGHT_BRACKET
                               &mt LEFT_ALT ESC  &mo 1           &kp SPACE    &mt RG(LSHIFT) ENTER  &mo 0               &mt LCTRL BACKSPACE
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp UNDERSCORE  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH              &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTERISK           &none             &none     &kp EQUAL
&kp MINUS       &kp NUMBER_1     &kp NUMBER_2   &kp NUMBER_3          &kp NUMBER_4      &kp N5            &kp NUMBER_6     &kp N7             &kp N8                 &kp N9            &kp N0    &kp PLUS
&none           &kp BACKSLASH    &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp PIPE  &none
                                                &trans                &trans            &trans            &kp LS(RET)      &mo 3              &trans
            >;
        };

        f_move_sound {
            bindings = <
&kp F1  &kp F2  &kp F3            &kp F4      &kp F5             &kp F6    &kp F7              &kp F8              &kp F9            &kp F10        &kp F11  &kp F12
&none   &none   &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP    &none     &kp LEFT            &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT      &none    &none
&none   &none   &kp K_MUTE        &kp C_PREV  &kp C_VOLUME_DOWN  &none     &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &none    &none
                                  &trans      &mo 3              &trans    &trans              &trans              &trans
            >;
        };

        mouse {
            bindings = <
&kp C_RESET  &none  &none   &none       &none   &none     &kp KP_NUMBER_7  &trans  &trans      &none   &none  &none
&kp K_POWER  &none  &trans  &trans      &trans  &none     &trans           &trans  &trans      &trans  &none  &none
&kp K_SLEEP  &none  &trans  &trans      &trans  &none     &trans           &trans  &none       &none   &none  &none
                            &kp DELETE  &trans  &trans    &trans           &trans  &kp DELETE
            >;
        };
    };
};
